#BlueJ class context
comment0.target=Game
comment0.text=\n\ Class\ representing\ the\ game\ state\ and\ workflow.\ Contains\ the\ main\ method\ and\ the\ board\ creator.\n\ \n
comment1.params=boardSize
comment1.target=Game(int)
comment1.text=\n\ Creates\ a\ new\ Game\ object.\n\ \n\ @param\ boardSize\ the\ size\ of\ the\ board\n
comment10.params=moveTurn
comment10.target=void\ playSingleGame(int)
comment10.text=\n\ Method\ that\ implements\ a\ single\ game\ of\ TicTacToe\ that\ includes\ the\ loop\ for\ going\ through\ turns\ and\ checking\ game\ statuses\n\ \n\ @param\ moveTurn\ a\ random\ number\ generated\ in\ the\ main\ method\ that\ indicates\ who\ goes\ first\ in\ the\ game\n
comment11.params=args
comment11.target=void\ main(java.lang.String[])
comment11.text=\n\ The\ main\ method\ that\ incorporates\ the\ stats,\ running\ a\ single\ game,\ and\ checking\ to\ see\ if\ the\ player\ wants\ to\ continue\ playing\ afterwards\n\ \n\ @param\ args\ Uses\ a\ try-catch\ method\ to\ make\ sure\ the\ args\ is\ within\ [1,9],\ if\ not,\ it\ would\ set\ the\ value\ to\ 3\n
comment2.params=
comment2.target=java.lang.String\ lineString()
comment2.text=\n\ Creates\ the\ horizontal\ lines\ in\ the\ matrix\n\ \n\ @return\ a\ horizontal\ line\ made\ of\ -\ and\ |\n
comment3.params=
comment3.target=java.lang.String\ toString()
comment3.text=\n\ Creates\ the\ matrix\ \n\ \n\ @return\ a\ string\ representation\ of\ the\ board\n
comment4.params=
comment4.target=int\ getBoardSize()
comment4.text=\n\ Finds\ the\ board\ size\n\ \n\ @return\ the\ size\ of\ the\ board\n
comment5.params=
comment5.target=void\ resetGame()
comment5.text=\n\ Resets\ the\ board\ by\ setting\ all\ the\ slots\ to\ the\ blank\ symbol\n
comment6.params=move\ symbol
comment6.target=void\ executeMove(Move,\ char)
comment6.text=\n\ Executes\ a\ chosen\ move\ by\ changing\ the\ slot\ in\ the\ board\ to\ whichever\ player's\ turn\ it\ is\n\ \n\ @param\ move\ The\ move\ chosen\ from\ the\ HumanPlayer\ class\ or\ the\ CpuPlayer\ class\n\ @param\ symbol\ The\ symbol\ from\ whoever's\ turn\ it\ is\n
comment7.params=
comment7.target=char\ getGameStatus()
comment7.text=\n\ Shows\ the\ current\ game\ status\ and\ winning/losing\ conditions\n\ ?\ if\ the\ game\ is\ still\ going\ on\n\ X\ if\ the\ player\ has\ won\n\ O\ if\ the\ computer\ has\ won\n\ \n\ @return\ a\ character\ depicting\ the\ game\ status\n
comment8.params=
comment8.target=char\ gameStatusTie()
comment8.text=\n\ A\ secondary\ method\ that\ shows\ the\ current\ game\ status\ and\ checks\ for\ tie\n\ ?\ if\ the\ game\ is\ still\ going\ on\n\ T\ if\ there\ is\ a\ tie\n\ \n\ @return\ a\ character\ depicting\ the\ game\ status\n
comment9.params=
comment9.target=int\ NumGen()
comment9.text=\n\ A\ simple\ number\ generation\ in\ the\ range\ of\ [1,5]\n\ \n\ @return\ the\ random\ number\ generated\n
numComments=12
